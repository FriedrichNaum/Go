/* Generated By:JavaCC: Do not edit this line. GoTokenManager.java */

/** Token Manager. */
public class GoTokenManager implements GoConstants
{

  /** Debug output. */
  public static  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public static  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private static final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private static final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
static private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
static private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 9:
         return jjStartNfaWithStates_0(0, 2, 0);
      case 10:
         return jjStartNfaWithStates_0(0, 3, 0);
      case 13:
         return jjStartNfaWithStates_0(0, 4, 0);
      case 32:
         return jjStartNfaWithStates_0(0, 1, 0);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static private int jjMoveNfa_0(int startState, int curPos)
{
   //int[] nextStates; // not used
   int startsAt = 0;
   jjnewStateCnt = 151;
   int i = 1;
   jjstateSet[0] = startState;
   //int j; // not used
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7000ac6200000000L & l) != 0L)
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  else if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 9)
                        kind = 9;
                     jjstateSet[jjnewStateCnt++] = 4;
                  }
                  else if ((0x800530000000000L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 5)
                        kind = 5;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(43, 44);
                  else if (curChar == 58)
                     jjCheckNAdd(30);
                  if (curChar == 47)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 45)
                     jjCheckNAddTwoStates(30, 48);
                  else if (curChar == 43)
                     jjCheckNAddTwoStates(30, 59);
                  else if (curChar == 38)
                     jjCheckNAddStates(3, 6);
                  else if (curChar == 62)
                     jjCheckNAddStates(7, 9);
                  else if (curChar == 60)
                     jjCheckNAddStates(10, 13);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 38;
                  else if (curChar == 37)
                     jjCheckNAdd(30);
                  else if (curChar == 42)
                     jjCheckNAdd(30);
                  else if (curChar == 33)
                     jjCheckNAdd(30);
                  else if (curChar == 61)
                     jjCheckNAdd(30);
                  break;
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 4:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) != 0L && kind > 9)
                     kind = 9;
                  break;
               case 30:
                  if (curChar == 61 && kind > 11)
                     kind = 11;
                  break;
               case 31:
                  if (curChar == 61)
                     jjCheckNAdd(30);
                  break;
               case 32:
                  if (curChar == 33)
                     jjCheckNAdd(30);
                  break;
               case 33:
                  if (curChar == 42)
                     jjCheckNAdd(30);
                  break;
               case 34:
                  if (curChar == 37)
                     jjCheckNAdd(30);
                  break;
               case 36:
                  if (curChar == 58)
                     jjCheckNAdd(30);
                  break;
               case 37:
                  if (curChar == 46 && kind > 11)
                     kind = 11;
                  break;
               case 38:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if ((0x7000ac6200000000L & l) != 0L && kind > 11)
                     kind = 11;
                  break;
               case 41:
                  if ((0x800530000000000L & l) != 0L && kind > 12)
                     kind = 12;
                  break;
               case 42:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(43, 44);
                  break;
               case 43:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(43, 44);
                  break;
               case 44:
                  if (curChar == 34 && kind > 13)
                     kind = 13;
                  break;
               case 45:
                  if (curChar == 60)
                     jjCheckNAddStates(10, 13);
                  break;
               case 46:
                  if (curChar == 60 && kind > 11)
                     kind = 11;
                  break;
               case 47:
                  if (curChar == 60)
                     jjCheckNAdd(30);
                  break;
               case 48:
                  if (curChar == 45 && kind > 11)
                     kind = 11;
                  break;
               case 49:
                  if (curChar == 62)
                     jjCheckNAddStates(7, 9);
                  break;
               case 50:
                  if (curChar == 62 && kind > 11)
                     kind = 11;
                  break;
               case 51:
                  if (curChar == 62)
                     jjCheckNAdd(30);
                  break;
               case 52:
                  if (curChar == 38)
                     jjCheckNAddStates(3, 6);
                  break;
               case 53:
                  if (curChar == 38 && kind > 11)
                     kind = 11;
                  break;
               case 58:
                  if (curChar == 43)
                     jjCheckNAddTwoStates(30, 59);
                  break;
               case 59:
                  if (curChar == 43 && kind > 11)
                     kind = 11;
                  break;
               case 60:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(30, 48);
                  break;
               case 139:
                  if (curChar == 47)
                     jjCheckNAddStates(0, 2);
                  break;
               case 140:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(141, 142);
                  break;
               case 141:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     jjCheckNAddTwoStates(141, 142);
                  break;
               case 142:
                  if ((0x2400L & l) != 0L && kind > 6)
                     kind = 6;
                  break;
               case 143:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(144, 145);
                  break;
               case 144:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(144, 145);
                  break;
               case 145:
                  if (curChar == 42)
                     jjCheckNAddStates(14, 16);
                  break;
               case 146:
                  if ((0xffff7fffffffffffL & l) != 0L)
                     jjCheckNAddStates(14, 16);
                  break;
               case 147:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 148:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddStates(14, 16);
                  break;
               case 149:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 150:
                  if (curChar == 47 && kind > 7)
                     kind = 7;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 8)
                        kind = 8;
                     jjCheckNAdd(2);
                  }
                  else if ((0x2800000028000000L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                  }
                  else if ((0x1000000040000000L & l) != 0L)
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  if (curChar == 114)
                     jjAddStates(17, 18);
                  else if (curChar == 103)
                     jjCheckNAddTwoStates(128, 130);
                  else if (curChar == 99)
                     jjAddStates(19, 22);
                  else if (curChar == 115)
                     jjAddStates(23, 25);
                  else if (curChar == 105)
                     jjAddStates(26, 28);
                  else if (curChar == 102)
                     jjAddStates(29, 31);
                  else if (curChar == 100)
                     jjAddStates(32, 33);
                  else if (curChar == 124)
                     jjCheckNAddTwoStates(57, 30);
                  else if (curChar == 94)
                     jjCheckNAdd(30);
                  else if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 28;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 25;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 22;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 16;
                  else if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 2:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(2);
                  break;
               case 6:
                  if (curChar == 107 && kind > 10)
                     kind = 10;
                  break;
               case 7:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 112 && kind > 10)
                     kind = 10;
                  break;
               case 12:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 101 && kind > 10)
                     kind = 10;
                  break;
               case 15:
               case 113:
                  if (curChar == 115)
                     jjCheckNAdd(14);
                  break;
               case 16:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
               case 132:
                  if (curChar == 103)
                     jjCheckNAdd(14);
                  break;
               case 19:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 107)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 112)
                     jjCheckNAdd(14);
                  break;
               case 25:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 114 && kind > 10)
                     kind = 10;
                  break;
               case 28:
                  if (curChar == 97)
                     jjCheckNAdd(27);
                  break;
               case 29:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 35:
               case 55:
                  if (curChar == 94)
                     jjCheckNAdd(30);
                  break;
               case 40:
                  if ((0x1000000040000000L & l) != 0L && kind > 11)
                     kind = 11;
                  break;
               case 41:
                  if ((0x2800000028000000L & l) != 0L && kind > 12)
                     kind = 12;
                  break;
               case 43:
                  jjAddStates(34, 35);
                  break;
               case 54:
                  if (curChar == 94 && kind > 11)
                     kind = 11;
                  break;
               case 56:
                  if (curChar == 124)
                     jjCheckNAddTwoStates(57, 30);
                  break;
               case 57:
                  if (curChar == 124 && kind > 11)
                     kind = 11;
                  break;
               case 61:
                  if (curChar == 100)
                     jjAddStates(32, 33);
                  break;
               case 62:
                  if (curChar == 116 && kind > 10)
                     kind = 10;
                  break;
               case 63:
                  if (curChar == 108)
                     jjCheckNAdd(62);
                  break;
               case 64:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if (curChar == 101)
                     jjCheckNAdd(27);
                  break;
               case 69:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (curChar == 102)
                     jjAddStates(29, 31);
                  break;
               case 72:
                  if (curChar == 99 && kind > 10)
                     kind = 10;
                  break;
               case 73:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 104 && kind > 10)
                     kind = 10;
                  break;
               case 76:
                  if (curChar == 103)
                     jjCheckNAdd(75);
                  break;
               case 77:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 82:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if (curChar == 111)
                     jjCheckNAdd(27);
                  break;
               case 86:
                  if (curChar == 105)
                     jjAddStates(26, 28);
                  break;
               case 87:
                  if (curChar == 99)
                     jjCheckNAdd(14);
                  break;
               case 88:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 102 && kind > 10)
                     kind = 10;
                  break;
               case 95:
                  if (curChar == 114)
                     jjCheckNAdd(62);
                  break;
               case 96:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 98:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if (curChar == 115)
                     jjAddStates(23, 25);
                  break;
               case 100:
               case 104:
                  if (curChar == 99)
                     jjCheckNAdd(62);
                  break;
               case 101:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 105:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 99)
                     jjCheckNAdd(75);
                  break;
               case 109:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 99)
                     jjAddStates(19, 22);
                  break;
               case 114:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if (curChar == 110 && kind > 10)
                     kind = 10;
                  break;
               case 116:
                  if (curChar == 97)
                     jjCheckNAdd(115);
                  break;
               case 117:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 115)
                     jjCheckNAdd(62);
                  break;
               case 119:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 117)
                     jjCheckNAdd(14);
                  break;
               case 122:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 103)
                     jjCheckNAddTwoStates(128, 130);
                  break;
               case 128:
                  if (curChar == 111 && kind > 10)
                     kind = 10;
                  break;
               case 129:
                  if (curChar == 116)
                     jjCheckNAdd(128);
                  break;
               case 130:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 114)
                     jjAddStates(17, 18);
                  break;
               case 133:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 114)
                     jjCheckNAdd(115);
                  break;
               case 136:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 141:
                  jjAddStates(36, 37);
                  break;
               case 144:
                  jjAddStates(38, 39);
                  break;
               case 146:
               case 148:
                  jjCheckNAddStates(14, 16);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 43:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(34, 35);
                  break;
               case 141:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(36, 37);
                  break;
               case 144:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(38, 39);
                  break;
               case 146:
               case 148:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(14, 16);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 151 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   140, 143, 30, 53, 54, 30, 55, 30, 50, 51, 30, 46, 47, 48, 146, 147, 
   149, 134, 138, 114, 117, 120, 126, 103, 107, 111, 93, 94, 98, 74, 84, 85, 
   67, 70, 43, 44, 141, 142, 144, 145, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT", 
};
static final long[] jjtoToken = {
   0x3f01L, 
};
static final long[] jjtoSkip = {
   0x1eL, 
};
static final long[] jjtoMore = {
   0xe0L, 
};
static protected SimpleCharStream input_stream;
static private final int[] jjrounds = new int[151];
static private final int[] jjstateSet = new int[302];
static protected char curChar;
/** Constructor. */
public GoTokenManager(SimpleCharStream stream){
   if (input_stream != null)
      throw new TokenMgrError("ERROR: Second call to constructor of static lexer. You must use ReInit() to initialize the static variables.", TokenMgrError.STATIC_LEXER_ERROR);
   input_stream = stream;
}

/** Constructor. */
public GoTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
static private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 151; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
static public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

static protected Token jjFillToken()
{
   final Token t;
   final String tokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   tokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, tokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

static int curLexState = 0;
static int defaultLexState = 0;
static int jjnewStateCnt;
static int jjround;
static int jjmatchedPos;
static int jjmatchedKind;

/** Get the next Token. */
public static Token getNextToken() 
{
  //int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   for (;;)
   {
     jjmatchedKind = 0x7fffffff;
     jjmatchedPos = 0;
     curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         continue EOFLoop;
      }
      curPos = 0;
      jjmatchedKind = 0x7fffffff;
      try {
         curChar = input_stream.readChar();
         continue;
      }
      catch (java.io.IOException e1) { }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
 }
  }
}

static private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
static private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
static private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

static private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
